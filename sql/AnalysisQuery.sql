USE CustomerManagement 
GO 


---Top-Selling Products---

---This query calculates the total quantity sold for each product and ranks the products based on total sales
SELECT 
    P.ProductID,
    P.ProductName,
    SUM(OI.Quantity) AS TotalQuantitySold,
    SUM(OI.TotalPrice) AS TotalRevenue
FROM 
    OrderItems OI
INNER JOIN 
    Products P ON OI.ProductID = P.ProductID
GROUP BY 
    P.ProductID, P.ProductName
ORDER BY 
    TotalQuantitySold DESC;



--2. Product Categories Driving the Most Revenue
--This query shows which product categories are generating the most revenue.

SELECT 
    C.CategoryID,
    C.CategoryName,
    SUM(OI.Quantity * OI.UnitPrice) AS TotalRevenue
FROM 
    OrderItems OI
INNER JOIN 
    Products P ON OI.ProductID = P.ProductID
INNER JOIN 
    Categories C ON P.CategoryID = C.CategoryID
GROUP BY 
    C.CategoryID, C.CategoryName
ORDER BY 
    TotalRevenue DESC;



--3. Average Order Value Over Time
--This query calculates the average order value for each month.
SELECT 
    YEAR(O.OrderDate) AS OrderYear,
    MONTH(O.OrderDate) AS OrderMonth,
    AVG(O.OrderTotal) AS AverageOrderValue
FROM 
    Orders O
GROUP BY 
    YEAR(O.OrderDate), MONTH(O.OrderDate)
ORDER BY 
    OrderYear, OrderMonth;



--4. Revenue Per Product (Total Revenue by Product)
--This query calculates the total revenue generated by each product.

SELECT 
    P.ProductID,
    P.ProductName,
    SUM(OI.Quantity * OI.UnitPrice) AS TotalRevenue
FROM 
    OrderItems OI
INNER JOIN 
    Products P ON OI.ProductID = P.ProductID
GROUP BY 
    P.ProductID, P.ProductName
ORDER BY 
    TotalRevenue DESC;



--5. Top Product Brands by Revenue
--This query shows which product brands are driving the most revenue.

SELECT 
    B.BrandID,
    B.BrandName,
    SUM(OI.Quantity * OI.UnitPrice) AS TotalRevenue
FROM 
    OrderItems OI
INNER JOIN 
    Products P ON OI.ProductID = P.ProductID
INNER JOIN 
    Brands B ON P.BrandID = B.BrandID
GROUP BY 
    B.BrandID, B.BrandName
ORDER BY 
    TotalRevenue DESC;


--6. Average Quantity Ordered per Product
--This query calculates the average number of units ordered per product.

SELECT 
    P.ProductID,
    P.ProductName,
    AVG(OI.Quantity) AS AverageQuantityOrdered
FROM 
    OrderItems OI
INNER JOIN 
    Products P ON OI.ProductID = P.ProductID
GROUP BY 
    P.ProductID, P.ProductName
ORDER BY 
    AverageQuantityOrdered DESC;


--7. Monthly Sales for the Past Year
--This query shows the total revenue generated each month for the last 12 months.

SELECT 
    YEAR(O.OrderDate) AS OrderYear,
    MONTH(O.OrderDate) AS OrderMonth,
    SUM(OI.TotalPrice) AS TotalMonthlyRevenue
FROM 
    Orders O
INNER JOIN 
    OrderItems OI ON O.OrderID = OI.OrderID
WHERE 
    O.OrderDate >= DATEADD(YEAR, -1, GETDATE())
GROUP BY 
    YEAR(O.OrderDate), MONTH(O.OrderDate)
ORDER BY 
    OrderYear, OrderMonth;

--8. Products with the Highest Average Rating
--This query shows the products that have the highest average customer ratings.

SELECT 
    P.ProductID,
    P.ProductName,
    AVG(CR.Rating) AS AverageRating
FROM 
    CustomerReviews CR
INNER JOIN 
    Products P ON CR.ProductID = P.ProductID
GROUP BY 
    P.ProductID, P.ProductName
HAVING 
    COUNT(CR.Rating) >= 5 
ORDER BY 
    AverageRating DESC;


--1. Top-Rated Products
--This query calculates the average rating for each product and ranks them by the highest average rating.

SELECT 
    P.ProductID,
    P.ProductName,
    AVG(CR.Rating) AS AverageRating,
    COUNT(CR.Rating) AS TotalReviews
FROM 
    CustomerReviews CR
INNER JOIN 
    Products P ON CR.ProductID = P.ProductID
GROUP BY 
    P.ProductID, P.ProductName
HAVING 
    COUNT(CR.Rating) > 0  -- Only include products with reviews
ORDER BY 
    AverageRating DESC;


--2. Most Reviewed Products
--This query finds products that have received the most customer reviews.

SELECT 
    P.ProductID,
    P.ProductName,
    COUNT(CR.ReviewID) AS TotalReviews
FROM 
    CustomerReviews CR
INNER JOIN 
    Products P ON CR.ProductID = P.ProductID
GROUP BY 
    P.ProductID, P.ProductName
ORDER BY 
    TotalReviews DESC;


--9. Customer Reviews with Comments
--This query retrieves reviews where customers provided textual feedback, not just ratings.

SELECT 
    C.CustomerID,
    C.FullName,
    P.ProductID,
    P.ProductName,
    CR.Rating,
    CR.ReviewText,
    CR.ReviewDate
FROM 
    CustomerReviews CR
INNER JOIN 
    Customers C ON CR.CustomerID = C.CustomerID
INNER JOIN 
    Products P ON CR.ProductID = P.ProductID
WHERE 
    CR.ReviewText IS NOT NULL AND CR.ReviewText != ''
ORDER BY 
    CR.ReviewDate DESC;


